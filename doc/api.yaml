openapi: 3.0.0
paths:
  /user:
    get:
      operationId: UsersController_findAll
      parameters: []
      responses:
        "200":
          description: ""
    post:
      operationId: UsersController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserDto"
      responses:
        "201":
          description: ""
  /user/{id}:
    get:
      operationId: UsersController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
    put:
      operationId: UsersController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePasswordDto"
      responses:
        "200":
          description: ""
    delete:
      operationId: UsersController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: ""
  /track:
    get:
      operationId: TracksController_findAll
      parameters: []
      responses:
        "200":
          description: ""
    post:
      operationId: TracksController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTrackDto"
      responses:
        "201":
          description: ""
  /track/{id}:
    get:
      operationId: TracksController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
    put:
      operationId: TracksController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTrackDto"
      responses:
        "200":
          description: ""
    delete:
      operationId: TracksController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: ""
  /artist:
    get:
      operationId: ArtistsController_findAll
      parameters: []
      responses:
        "200":
          description: ""
    post:
      operationId: ArtistsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateArtistDto"
      responses:
        "201":
          description: ""
  /artist/{id}:
    get:
      operationId: ArtistsController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
    put:
      operationId: ArtistsController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateArtistDto"
      responses:
        "200":
          description: ""
    delete:
      operationId: ArtistsController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: ""
  /album:
    get:
      operationId: AlbumsController_findAll
      parameters: []
      responses:
        "200":
          description: ""
    post:
      operationId: AlbumsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAlbumDto"
      responses:
        "201":
          description: ""
  /album/{id}:
    get:
      operationId: AlbumsController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
    put:
      operationId: AlbumsController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAlbumDto"
      responses:
        "200":
          description: ""
    delete:
      operationId: AlbumsController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: ""
  /favs:
    get:
      operationId: FavoritesController_findAll
      parameters: []
      responses:
        "200":
          description: ""
  /favs/track/{id}:
    post:
      operationId: FavoritesController_addTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "201":
          description: ""
    delete:
      operationId: FavoritesController_removeTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: ""
  /favs/album/{id}:
    post:
      operationId: FavoritesController_addAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "201":
          description: ""
    delete:
      operationId: FavoritesController_removeAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: ""
  /favs/artist/{id}:
    post:
      operationId: FavoritesController_addArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "201":
          description: ""
    delete:
      operationId: FavoritesController_removeArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: ""
info:
  title: Home Library Service
  description: Home music library service
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    CreateUserDto:
      type: object
      properties:
        login:
          type: string
          example: john_doe
          description: User login
        password:
          type: string
          example: password123
          description: User password
      required:
        - login
        - password
    UpdatePasswordDto:
      type: object
      properties: {}
    CreateTrackDto:
      type: object
      properties:
        name:
          type: string
          example: Billie Jean
          description: The name of the track
        duration:
          type: number
          example: 180
          description: The duration of the track in seconds
        artistId:
          type: string
          example: e37b6c61-2ef0-41e0-a421-f8f3311f6977
          description: The ID of the artist
        albumId:
          type: string
          example: e37b6c11-9ef0-41e0-a421-f8f3311f6977
          description: The ID of the album
      required:
        - name
        - duration
    CreateArtistDto:
      type: object
      properties:
        name:
          type: string
          example: Michael Jackson
          description: The name of the artist
        grammy:
          type: boolean
          example: true
          description: Whether the artist has a Grammy award
      required:
        - name
        - grammy
    CreateAlbumDto:
      type: object
      properties:
        name:
          type: string
          example: Thriller
          description: The name of the album
        year:
          type: number
          example: 2023
          description: The release year of the album
        artistId:
          type: string
          example: e37b6c11-9ef0-41e0-a221-f8f3311f6977
          description: The ID of the artist
      required:
        - name
        - year
