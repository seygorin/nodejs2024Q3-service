{
  "openapi": "3.0.0",
  "paths": {
    "/auth/signup": {
      "post": {
        "operationId": "AuthController_signUp",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "summary": "Login user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              },
              "examples": {
                "example1": {
                  "summary": "Login credentials example",
                  "value": {
                    "login": "testuser",
                    "password": "Test123!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.example-access-token",
                  "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.example-refresh-token"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - validation error"
          },
          "403": {
            "description": "Forbidden - invalid credentials"
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "operationId": "AuthController_refresh",
        "summary": "Refresh access token",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              },
              "examples": {
                "example1": {
                  "summary": "Refresh token example",
                  "value": {
                    "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully refreshed tokens",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                  "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - refresh token required"
          },
          "403": {
            "description": "Forbidden - invalid refresh token"
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/user": {
      "get": {
        "operationId": "UsersController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "post": {
        "operationId": "UsersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/user/{id}": {
      "get": {
        "operationId": "UsersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "put": {
        "operationId": "UsersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "delete": {
        "operationId": "UsersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/artist": {
      "get": {
        "operationId": "ArtistsController_findAll",
        "summary": "Get all artists",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all artists."
          },
          "401": {
            "description": "Unauthorized."
          }
        },
        "tags": [
          "Artists"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "post": {
        "operationId": "ArtistsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateArtistDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Artists"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/artist/{id}": {
      "get": {
        "operationId": "ArtistsController_findOne",
        "summary": "Get artist by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return artist by id."
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Artist not found."
          }
        },
        "tags": [
          "Artists"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "put": {
        "operationId": "ArtistsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateArtistDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Artists"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "delete": {
        "operationId": "ArtistsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Artists"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/track": {
      "get": {
        "operationId": "TracksController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Tracks"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "post": {
        "operationId": "TracksController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrackDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Tracks"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/track/{id}": {
      "get": {
        "operationId": "TracksController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Tracks"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "put": {
        "operationId": "TracksController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrackDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Tracks"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "delete": {
        "operationId": "TracksController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Tracks"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/album": {
      "get": {
        "operationId": "AlbumsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Albums"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "post": {
        "operationId": "AlbumsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAlbumDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Albums"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/album/{id}": {
      "get": {
        "operationId": "AlbumsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Albums"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "put": {
        "operationId": "AlbumsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAlbumDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Albums"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "delete": {
        "operationId": "AlbumsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Albums"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/favs": {
      "get": {
        "operationId": "FavoritesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Favorites"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/favs/track/{id}": {
      "post": {
        "operationId": "FavoritesController_addTrack",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Favorites"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "delete": {
        "operationId": "FavoritesController_removeTrack",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Favorites"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/favs/album/{id}": {
      "post": {
        "operationId": "FavoritesController_addAlbum",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Favorites"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "delete": {
        "operationId": "FavoritesController_removeAlbum",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Favorites"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/favs/artist/{id}": {
      "post": {
        "operationId": "FavoritesController_addArtist",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Favorites"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "delete": {
        "operationId": "FavoritesController_removeArtist",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Favorites"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Home Library Service",
    "description": "\n      ## Authentication\n      1. Use POST /auth/login to get tokens\n      2. Click 'Authorize' button at the top\n      3. Enter your access token in format: Bearer <token>\n      4. Now you can access protected endpoints\n    ",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "JWT-auth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "Enter JWT token",
        "in": "header"
      }
    },
    "schemas": {
      "SignUpDto": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "example": "testuser",
            "description": "User login"
          },
          "password": {
            "type": "string",
            "example": "Test123!",
            "description": "User password"
          }
        },
        "required": [
          "login",
          "password"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {}
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "description": "Refresh token"
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "example": "john_doe",
            "description": "User login"
          },
          "password": {
            "type": "string",
            "example": "password123",
            "description": "User password"
          }
        },
        "required": [
          "login",
          "password"
        ]
      },
      "UpdatePasswordDto": {
        "type": "object",
        "properties": {}
      },
      "CreateArtistDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Michael Jackson",
            "description": "The name of the artist"
          },
          "grammy": {
            "type": "boolean",
            "example": true,
            "description": "Whether the artist has a Grammy award"
          }
        },
        "required": [
          "name",
          "grammy"
        ]
      },
      "CreateTrackDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Billie Jean",
            "description": "The name of the track"
          },
          "duration": {
            "type": "number",
            "example": 180,
            "description": "The duration of the track in seconds"
          },
          "artistId": {
            "type": "string",
            "example": "e37b6c61-2ef0-41e0-a421-f8f3311f6977",
            "description": "The ID of the artist"
          },
          "albumId": {
            "type": "string",
            "example": "e37b6c11-9ef0-41e0-a421-f8f3311f6977",
            "description": "The ID of the album"
          }
        },
        "required": [
          "name",
          "duration"
        ]
      },
      "CreateAlbumDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Thriller",
            "description": "The name of the album"
          },
          "year": {
            "type": "number",
            "example": 2023,
            "description": "The release year of the album"
          },
          "artistId": {
            "type": "string",
            "example": "e37b6c11-9ef0-41e0-a221-f8f3311f6977",
            "description": "The ID of the artist"
          }
        },
        "required": [
          "name",
          "year"
        ]
      }
    }
  }
}